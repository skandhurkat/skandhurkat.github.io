<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Skand Hurkat</title>
    <link>https://skandhurkat.com/post/</link>
    <description>Recent content in Posts on Skand Hurkat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://skandhurkat.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to CMake</title>
      <link>https://skandhurkat.com/post/intro-to-cmake/</link>
      <pubDate>Thu, 23 Nov 2017 16:28:40 -0500</pubDate>
      
      <guid>https://skandhurkat.com/post/intro-to-cmake/</guid>
      <description>CMake is cross-platform build and configuration system for C and C++ code, which also happens to be my favourite build system. In this post, I&amp;rsquo;ll present a quick tutorial on getting started with CMake.
But before we do, let&amp;rsquo;s start with an example of why other build systems such as Makefiles don&amp;rsquo;t necessarily cut it. Actually, Makefiles work fairly well, but writing Makefiles by hand is generally a pain in the neck.</description>
    </item>
    
    <item>
      <title>Handling dependencies in Makefiles</title>
      <link>https://skandhurkat.com/post/makefile-dependencies/</link>
      <pubDate>Wed, 02 Aug 2017 17:45:00 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/makefile-dependencies/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve seen way too many projects that supply a makefile that requires the
user to run &lt;code&gt;make clean&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; every single time they make a
change to some file. This is annoying and error prone, and the good news
is that it can be easily solved with this one simple trick. Use a good
build-generation system like &lt;a href=&#34;//cmake.org&#34; target=&#34;_blank&#34;&gt;CMake&lt;/a&gt; instead.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Net Neutrality</title>
      <link>https://skandhurkat.com/post/net-neutrality/</link>
      <pubDate>Wed, 12 Jul 2017 09:04:44 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/net-neutrality/</guid>
      <description>&lt;p&gt;Today, my website displays a banner to join the fight for an open
internet. My message to the FCC follows.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Happy Fourth of July</title>
      <link>https://skandhurkat.com/post/happy-fourth-july-2017/</link>
      <pubDate>Tue, 04 Jul 2017 10:22:16 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/happy-fourth-july-2017/</guid>
      <description>&lt;p&gt;Four pictures of the third of July fireworks in Ithaca to celebrate the
fourth of July.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My thoughts on ISCA 2017</title>
      <link>https://skandhurkat.com/post/thoughts-isca-2017/</link>
      <pubDate>Thu, 29 Jun 2017 17:28:43 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/thoughts-isca-2017/</guid>
      <description>I&amp;rsquo;m back from the 44th International Symposium on Computer Architecture, and this is a perfect time for me to summarise my thoughts on the conference.
The conference was in Toronto, which was a refreshing change for me to see correct spelling and sensible units for a change. Beyond that, the conference had a lot of interesting developments, and some that were not quite as interesting.
First, let me address the 15-month elephant in the room.</description>
    </item>
    
    <item>
      <title>An Introduction to CTest</title>
      <link>https://skandhurkat.com/post/intro-to-ctest/</link>
      <pubDate>Thu, 22 Jun 2017 11:05:43 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/intro-to-ctest/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve seen a lot of people (I&amp;rsquo;m looking at you &lt;a href=&#34;//lemire.me&#34; target=&#34;_blank&#34;&gt;Daniel
Lemire&lt;/a&gt;) praise newer languages like &lt;em&gt;Go&lt;/em&gt;, which makes me
sad as a C++ programmer. Well, that&amp;rsquo;s until I realise that most of the
features touted could be easily incorporated in C++ with just a bit of
elbow grease. In this post, I&amp;rsquo;ll show how to add an automated testing
system using CTest.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>An Introduction to Vim Macros</title>
      <link>https://skandhurkat.com/post/intro-to-vim-macros/</link>
      <pubDate>Sun, 04 Jun 2017 15:33:09 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/intro-to-vim-macros/</guid>
      <description>Vim is my favourite text editor, because it is minimalist while also being insanely configurable. While I may describe my ideal Vim setup sometime in the future, I do want to share some tips and tricks that make Vim so damn efficient for certain tasks. Today, I shall focus on macros.
Here&amp;rsquo;s the key idea to keep in mind when discussing about Vim. Vim is not just an editor, it is a text manipulation program.</description>
    </item>
    
    <item>
      <title>A bug in how GCC handles constructors</title>
      <link>https://skandhurkat.com/post/gcc-constructor-bug/</link>
      <pubDate>Tue, 23 May 2017 10:51:42 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/gcc-constructor-bug/</guid>
      <description>Some days ago, I became aware of a bug in GCC that has apparently existed since 2015. As this is a bug that deals with memory leaks, it is fairly serious.
In this case, I really don&amp;rsquo;t want to re-post the entire content of the source, so I will only list my experiments with reproducing the bug once I became aware of it.
C++ assumes that if a constructor fails, then no memory is allocated for the object at all.</description>
    </item>
    
    <item>
      <title>X forwarding on Docker</title>
      <link>https://skandhurkat.com/post/x-forwarding-on-docker/</link>
      <pubDate>Tue, 25 Apr 2017 16:21:47 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/x-forwarding-on-docker/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;//markbuckler.com&#34; target=&#34;_blank&#34;&gt;Mark Buckler&lt;/a&gt; and I use Docker a lot.
Sometimes, we need X11 forwarding to work over SSH. Here&amp;rsquo;s a summary of
the steps involved in case you&amp;rsquo;re curious.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PSA: Don&#39;t use std::rand()</title>
      <link>https://skandhurkat.com/post/psa-dont-use-rand/</link>
      <pubDate>Sun, 16 Apr 2017 19:50:51 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/psa-dont-use-rand/</guid>
      <description>&lt;p&gt;With the &lt;code&gt;&amp;lt;random&amp;gt;&lt;/code&gt; header in C++11 onwards, there really is no reason
to use &lt;code&gt;std::rand()&lt;/code&gt; to generate random numbers. In fact, using
&lt;code&gt;std::rand()&lt;/code&gt; could be really harmful.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cornell Graduate Students United: At what cost?</title>
      <link>https://skandhurkat.com/post/cgsu-at-what-cost/</link>
      <pubDate>Sat, 25 Mar 2017 17:56:19 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/cgsu-at-what-cost/</guid>
      <description>On Monday and Tuesday, we graduate students at Cornell will be voting on whether or not we want to unionise. Actually, scratch that, only graduate students who hold a TA, RA, or GRA appointment can unionise.
This is a shitty arrangement, and I will be voting against it.
For those of you who are not aware of how graduate school works at Cornell, you could be on one of many appointments.</description>
    </item>
    
    <item>
      <title>Seven pictures from the storm Stella that show the beauty of the Ithaca winter</title>
      <link>https://skandhurkat.com/post/seven-pictures-storm-stella/</link>
      <pubDate>Tue, 14 Mar 2017 18:01:49 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/seven-pictures-storm-stella/</guid>
      <description>&lt;p&gt;Winter is a seriously underrated season at Cornell. These seven pictures
will show you just how beautiful the campus gets during a thick snow
shower.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A history of computing -- my perspective</title>
      <link>https://skandhurkat.com/post/history-of-computing/</link>
      <pubDate>Sat, 31 Aug 2013 17:46:37 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/history-of-computing/</guid>
      <description>&lt;p&gt;Because I can publish shitty drawings, and even shittier text.&lt;/p&gt;

&lt;p&gt;And I have no obligation to be accurate.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>On writing platform-independent code (or why I like the new C&#43;&#43;)</title>
      <link>https://skandhurkat.com/post/why-i-like-cpp11/</link>
      <pubDate>Sat, 16 Mar 2013 17:26:35 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/why-i-like-cpp11/</guid>
      <description>I use Linux when I work from home, I&amp;rsquo;m forced to use a Mac at work (well, I boot up a virtual Linux OS), and I use Windows when I just want to goof around with my computer. So, while most of my work is done on Linux, it&amp;rsquo;s imperative that my code work on all platforms; just because I could use any of the three.
Traditionally, C required multiple versions of code, protected by #ifdefs.</description>
    </item>
    
    <item>
      <title>AutoHell v CMake</title>
      <link>https://skandhurkat.com/post/autohell-v-cmake/</link>
      <pubDate>Thu, 16 Aug 2012 17:24:18 -0400</pubDate>
      
      <guid>https://skandhurkat.com/post/autohell-v-cmake/</guid>
      <description>People familiar with the GNU/Unix system would know that the standard way to install about any GNU software from code is to run the following commands
configure make sudo make install  These commands are from the GNU autotools environment. Knowing the GNU environment, these tools are what I used to compile most of the (relatively small) pieces of code I wrote.
Until I discovered CMake.
CMake, or Cross-platform Make is a tool that serves the same functionality as the GNU autotools (hereafter referred to as autohell).</description>
    </item>
    
  </channel>
</rss>