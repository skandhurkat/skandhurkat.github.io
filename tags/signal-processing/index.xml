<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Signal Processing on Skand Hurkat – Computer Systems Lab, Cornell University</title>
    <link>http://skandhurkat.github.io/tags/signal-processing/</link>
    <description>Recent content in Signal Processing on Skand Hurkat – Computer Systems Lab, Cornell University</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Dec 2013 22:53:25 -0400</lastBuildDate>
    <atom:link href="/tags/signal-processing/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>LDPC decoding using residual BP</title>
      <link>http://skandhurkat.github.io/project/ldpc-decoder-residual-bp/</link>
      <pubDate>Fri, 13 Dec 2013 22:53:25 -0400</pubDate>
      
      <guid>http://skandhurkat.github.io/project/ldpc-decoder-residual-bp/</guid>
      <description>&lt;p&gt;This was a course project for CS6782 &amp;ndash; Probabilistic graphical models.
In this project, I study the application of two techniques to the
belief-propagation based decoding of LDPC codes, and compare these
techniques against a traditional sum-product LDPC decoder.  The first
technique, min-sum decoding was implemented in the 1980s by Tanner as a
method to reduce computational complexity of sum-product decoding. The
other technique, residual belief propagation optimises the order in
which message updates are scheduled in an informed manner, leading to
faster and better convergence. The two methods are combined and
experimentally evaluated.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Delay-aware proportional-fair scheduling in OFDMA networks</title>
      <link>http://skandhurkat.github.io/project/btp/</link>
      <pubDate>Mon, 30 Apr 2012 16:40:50 -0400</pubDate>
      
      <guid>http://skandhurkat.github.io/project/btp/</guid>
      <description>&lt;p&gt;This project considers the problem of delay-constrained scheduling over
wireless fading channels  in  OFDMA  networks  like  LTE-Advanced
networks.   Existing  scheduling  algorithms are considered and extended
to OFDMA networks, and performance is evaluated.  Specifically, the
problem of scheduling users on the downlink in TD-LTE networks has been
addressed, and suitably modified proportional-fair and opportunistic
schedulers are proposed.  Their performance is evaluated in the context
of downlink in TD-LTE systems, and compared.  Further, a simulation
environment has been created which can be used for further analysis of
scheduling algorithms in TD-LTE networks, and which can be suitably
extended for simulating relay-assisted networks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Active noise-cancelling headphones</title>
      <link>http://skandhurkat.github.io/project/edl/</link>
      <pubDate>Tue, 03 May 2011 16:47:24 -0400</pubDate>
      
      <guid>http://skandhurkat.github.io/project/edl/</guid>
      <description>&lt;p&gt;This was a semester long team course project as part of the Electronics
Design Lab (the dreaded &amp;ldquo;EDL&amp;rdquo;) course at IITB. The aim of this project
was to build an affordable pair of noise cancelling headphones.&lt;/p&gt;

&lt;p&gt;We developed an analogue feedback based controller as a disturbance
rejection control system; which had the added benefit of improving the
sound quality of our relatively cheap $10 headphones. The main
challenges in this project were to characterise the headphone-ear system
(the &amp;ldquo;plant&amp;rdquo;) to get the frequency magnitude and phase response; as the
system changes characteristics based on a number of factors, including
the shape of the ear cavity, the way the headphones are worn, and the
placement of the microphones inside the headphone cavity.&lt;/p&gt;

&lt;p&gt;Our control system resulted in a successful attenuation of noise, with a
peak cancellation of 17 db at 100 Hz. We aimed for maximum cancellation
at 100 Hz, as that&amp;rsquo;s the frequency of noise from appliances in an office
setting, like fans and airconditioning; when the AC mains supplies power
at 50 Hz.&lt;/p&gt;

&lt;p&gt;Our system was designed to work at 3 V, that is two dry cells. However,
we did not optimise the power consumption to maximise battery life,
given the limited time on the project; and because that would mean
micro-optimisation before macro-optimisation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Text-independent speaker verification</title>
      <link>http://skandhurkat.github.io/project/text-independent-speaker-verification/</link>
      <pubDate>Fri, 16 Apr 2010 17:09:15 -0400</pubDate>
      
      <guid>http://skandhurkat.github.io/project/text-independent-speaker-verification/</guid>
      <description>&lt;p&gt;We developed a system to identify users independent of their spoken
words. The system used Mel-frequency cepstral coefficients (MFCCs) to
obtain a characteristic pattern of the user&amp;rsquo;s voice which was then
analysed by a three layer multi-layer perceptron (MLP) neural network.
We obtained accuracies of over 90% using this approach.&lt;/p&gt;

&lt;p&gt;The entire project was implemented in MATLAB.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Text-dependent speaker verification</title>
      <link>http://skandhurkat.github.io/project/text-dependent-speaker-verification/</link>
      <pubDate>Thu, 16 Jul 2009 17:15:11 -0400</pubDate>
      
      <guid>http://skandhurkat.github.io/project/text-dependent-speaker-verification/</guid>
      <description>&lt;p&gt;This was a summer project in my first year. This system used an
ATmega128 microcontroller coupled with a 62256 SRAM module. It could
store and verify a 2 second speech signal by any one speaker. Support
for additional speakers may be added by adding an interface to an SD
card, and tweaking the code slightly.&lt;/p&gt;

&lt;p&gt;The system was designed to be compatible with a computer microphone for
accepting the input signal.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
